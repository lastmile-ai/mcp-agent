$schema: ../../../../schema/mcp-agent.config.schema.json

# LLM Provider API credentials
openai:
  api_key: !developer_secret ${oc.env:OPENAI_API_KEY}
  organization_id: !user_secret

anthropic:
  api_key: !developer_secret ${oc.env:ANTHROPIC_API_KEY}

google:
  api_key: !developer_secret ${oc.env:GOOGLE_API_KEY}

bedrock:
  access_key: !developer_secret ${oc.env:AWS_ACCESS_KEY_ID}
  secret_key: !developer_secret ${oc.env:AWS_SECRET_ACCESS_KEY}
  session_token: !user_secret

# Database credentials
database:
  user: !developer_secret ${oc.env:DB_USER}
  password: !developer_secret ${oc.env:DB_PASSWORD}
  ssl_cert: !user_secret

# Vector database credentials
vector_db:
  api_key: !developer_secret ${oc.env:VECTOR_DB_API_KEY}

# Service integrations with nested secrets
mcp:
  servers:
    slack:
      command: "npx"
      args: ["-y", "@modelcontextprotocol/server-slack"]
      env:
        SLACK_BOT_TOKEN: !developer_secret ${oc.env:SLACK_BOT_TOKEN}
        SLACK_TEAM_ID: !developer_secret ${oc.env:SLACK_TEAM_ID}
    
    github:
      command: "npx"
      args: ["-y", "@modelcontextprotocol/server-github"]
      env:
        GITHUB_PERSONAL_ACCESS_TOKEN: !developer_secret ${oc.env:GITHUB_PAT}
    
    zendesk:
      command: "npx"
      args: ["-y", "@modelcontextprotocol/server-zendesk"]
      env:
        ZENDESK_API_KEY: !developer_secret ${oc.env:ZENDESK_API_KEY}
        ZENDESK_SUBDOMAIN: !developer_secret ${oc.env:ZENDESK_SUBDOMAIN}
        ZENDESK_EMAIL: !developer_secret ${oc.env:ZENDESK_EMAIL}