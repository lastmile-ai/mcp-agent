$schema: ../../../../mcp-agent/schema/mcp-agent.config.schema.json

execution_engine: asyncio
logger:
  transports: [console, file]
  level: debug
  progress_display: true
  path_settings:
    path_pattern: "logs/mcp-agent-{unique_id}.jsonl"
    unique_id: "timestamp"
    timestamp_format: "%Y%m%d_%H%M%S"

mcp:
  servers:
    fetch:
      command: "uvx"
      args: ["mcp-server-fetch"]
    filesystem:
      command: "npx"
      args: ["-y", "@modelcontextprotocol/server-filesystem"]
    # Slack configuration with nested secrets transformed to handles
    slack:
      command: "npx"
      args: ["-y", "@modelcontextprotocol/server-slack"]
      env:
        SLACK_BOT_TOKEN: 12345678-abcd-1234-efgh-dev-mcp-servers-slack-env-SLACK_BOT_TOKEN
        SLACK_TEAM_ID: 98765432-abcd-5678-efgh-dev-mcp-servers-slack-env-SLACK_TEAM_ID

# Model provider settings (no secrets here)
openai:
  default_model: "gpt-4o"
  max_tokens: 4000
  temperature: 0.7

anthropic:
  default_model: "claude-3-opus-20240229"
  max_tokens: 4000
  temperature: 0.7

# Database configuration with transformed secrets
database:
  host: localhost
  port: 5432
  database: mcp_agent_db
  user: 12345678-wxyz-9876-efgh-dev-database-user
  password: abcdef12-3456-7890-abcd-dev-database-password
  ssl: true
  ssl_cert: !user_secret

server:
  api_key: 11223344-5566-7788-9900-dev-server-api-key
  user_token: !user_secret

# Model provider credentials transformed to handles
openai:
  api_key: aabbccdd-eeff-0011-2233-dev-openai-api-key

anthropic:
  api_key: 44556677-8899-aabb-ccdd-dev-anthropic-api-key

# Cloud provider credentials remain as user secrets
aws:
  region: !user_secret
  access_key_id: !user_secret
  secret_access_key: !user_secret